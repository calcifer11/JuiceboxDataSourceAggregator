{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "projectId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "group",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "preferClaimed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "preferAddToBalance",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "percent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "beneficiary",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lockedUntil",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IJBSplitAllocator",
                  "name": "allocator",
                  "type": "address"
                }
              ],
              "internalType": "struct JBSplit",
              "name": "split",
              "type": "tuple"
            }
          ],
          "internalType": "struct JBSplitAllocationData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "allocate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allocate((address,uint256,uint256,uint256,uint256,(bool,bool,uint256,uint256,address,uint256,address)))": "9d740bfa",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"group\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"preferClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"preferAddToBalance\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockedUntil\",\"type\":\"uint256\"},{\"internalType\":\"contract IJBSplitAllocator\",\"name\":\"allocator\",\"type\":\"address\"}],\"internalType\":\"struct JBSplit\",\"name\":\"split\",\"type\":\"tuple\"}],\"internalType\":\"struct JBSplitAllocationData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract address should be set as an allocator in the adequate split\",\"kind\":\"dev\",\"methods\":{\"allocate((address,uint256,uint256,uint256,uint256,(bool,bool,uint256,uint256,address,uint256,address)))\":{\"details\":\"Critical business logic should be protected by an appropriate access control. The token and/or eth are optimistically transfered to the allocator for its logic.\",\"params\":{\"data\":\"the data passed by the terminal, as a JBSplitAllocationData struct:\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Split allocator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allocate((address,uint256,uint256,uint256,uint256,(bool,bool,uint256,uint256,address,uint256,address)))\":{\"notice\":\"This function is called by JBPaymentTerminal.distributePayoutOf(..), during the processing of the split including it\"}},\"notice\":\"Provide a way to process a single split with extra logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBSplitAllocator.sol\":\"IJBSplitAllocator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@jbx-protocol/=node_modules/@jbx-protocol/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@paulrberg/=node_modules/@paulrberg/\",\":@prb/=node_modules/@prb/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":prb-math/=node_modules/prb-math/\"]},\"sources\":{\"node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBSplitAllocator.sol\":{\"keccak256\":\"0x1643b444409d91858eb86f67abf3d757d2deb3ccd7265eb8e68d6ffdac083de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9004fb8a2a80964dd7fd9c62457623948c34b10d9c30c32745232e78377f32\",\"dweb:/ipfs/QmcMePdnc8xypV2y8PBgfVzLWdTLMY89vqPDcfVVGiUqfK\"]},\"node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBSplit.sol\":{\"keccak256\":\"0x7bf3f79f95cf6211dcdcf5af68ddc963f2304379ea50a5feaf27c645879fe3fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6a9a86ded01128f50e75bffde831b3e33b4b1497a8392fc0d94f96ef49d6217\",\"dweb:/ipfs/QmShPBn7juPHkyKfV1yQ95nqtW1YSWzecmo37SimFQVxso\"]},\"node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBSplitAllocationData.sol\":{\"keccak256\":\"0x85dcbcad02f315a1a3cc44140ffc77fdfbcafed7089eab55ffb66f1bebc2b40b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6590d04009ea84209119f72dd0ae9ef1387198ee7fedd935cbbf4d193cb25572\",\"dweb:/ipfs/QmTM9xCRvpASixJr2VqBmZaNHPbAw9KFhHnBgePoCsa1Y2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct JBSplitAllocationData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "decimals",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "group",
                  "type": "uint256"
                },
                {
                  "internalType": "struct JBSplit",
                  "name": "split",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "preferClaimed",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "preferAddToBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "percent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "projectId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "beneficiary",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lockedUntil",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IJBSplitAllocator",
                      "name": "allocator",
                      "type": "address"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "allocate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allocate((address,uint256,uint256,uint256,uint256,(bool,bool,uint256,uint256,address,uint256,address)))": {
            "details": "Critical business logic should be protected by an appropriate access control. The token and/or eth are optimistically transfered to the allocator for its logic.",
            "params": {
              "data": "the data passed by the terminal, as a JBSplitAllocationData struct:"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allocate((address,uint256,uint256,uint256,uint256,(bool,bool,uint256,uint256,address,uint256,address)))": {
            "notice": "This function is called by JBPaymentTerminal.distributePayoutOf(..), during the processing of the split including it"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@jbx-protocol/=node_modules/@jbx-protocol/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@paulrberg/=node_modules/@paulrberg/",
        ":@prb/=node_modules/@prb/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":prb-math/=node_modules/prb-math/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBSplitAllocator.sol": "IJBSplitAllocator"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBSplitAllocator.sol": {
        "keccak256": "0x1643b444409d91858eb86f67abf3d757d2deb3ccd7265eb8e68d6ffdac083de6",
        "urls": [
          "bzz-raw://4c9004fb8a2a80964dd7fd9c62457623948c34b10d9c30c32745232e78377f32",
          "dweb:/ipfs/QmcMePdnc8xypV2y8PBgfVzLWdTLMY89vqPDcfVVGiUqfK"
        ],
        "license": "MIT"
      },
      "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBSplit.sol": {
        "keccak256": "0x7bf3f79f95cf6211dcdcf5af68ddc963f2304379ea50a5feaf27c645879fe3fe",
        "urls": [
          "bzz-raw://d6a9a86ded01128f50e75bffde831b3e33b4b1497a8392fc0d94f96ef49d6217",
          "dweb:/ipfs/QmShPBn7juPHkyKfV1yQ95nqtW1YSWzecmo37SimFQVxso"
        ],
        "license": "MIT"
      },
      "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBSplitAllocationData.sol": {
        "keccak256": "0x85dcbcad02f315a1a3cc44140ffc77fdfbcafed7089eab55ffb66f1bebc2b40b",
        "urls": [
          "bzz-raw://6590d04009ea84209119f72dd0ae9ef1387198ee7fedd935cbbf4d193cb25572",
          "dweb:/ipfs/QmTM9xCRvpASixJr2VqBmZaNHPbAw9KFhHnBgePoCsa1Y2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBSplitAllocator.sol",
    "id": 40130,
    "exportedSymbols": {
      "IERC165": [
        49182
      ],
      "IJBSplitAllocator": [
        40129
      ],
      "JBSplitAllocationData": [
        41777
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:868:63",
    "nodes": [
      {
        "id": 40114,
        "nodeType": "PragmaDirective",
        "src": "32:23:63",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 40116,
        "nodeType": "ImportDirective",
        "src": "57:80:63",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40130,
        "sourceUnit": 49183,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40115,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49182,
              "src": "65:7:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40118,
        "nodeType": "ImportDirective",
        "src": "138:75:63",
        "nodes": [],
        "absolutePath": "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBSplitAllocationData.sol",
        "file": "../structs/JBSplitAllocationData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40130,
        "sourceUnit": 41778,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40117,
              "name": "JBSplitAllocationData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41777,
              "src": "146:21:63",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40129,
        "nodeType": "ContractDefinition",
        "src": "393:506:63",
        "nodes": [
          {
            "id": 40128,
            "nodeType": "FunctionDefinition",
            "src": "825:72:63",
            "nodes": [],
            "documentation": {
              "id": 40122,
              "nodeType": "StructuredDocumentation",
              "src": "436:386:63",
              "text": "@notice This function is called by JBPaymentTerminal.distributePayoutOf(..), during the processing of the split including it\n @dev Critical business logic should be protected by an appropriate access control. The token and/or eth are optimistically transfered to the allocator for its logic.\n @param data the data passed by the terminal, as a JBSplitAllocationData struct:"
            },
            "functionSelector": "9d740bfa",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allocate",
            "nameLocation": "834:8:63",
            "parameters": {
              "id": 40126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40125,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "874:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 40128,
                  "src": "843:35:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_JBSplitAllocationData_$41777_calldata_ptr",
                    "typeString": "struct JBSplitAllocationData"
                  },
                  "typeName": {
                    "id": 40124,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40123,
                      "name": "JBSplitAllocationData",
                      "nameLocations": [
                        "843:21:63"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41777,
                      "src": "843:21:63"
                    },
                    "referencedDeclaration": 41777,
                    "src": "843:21:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JBSplitAllocationData_$41777_storage_ptr",
                      "typeString": "struct JBSplitAllocationData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "842:37:63"
            },
            "returnParameters": {
              "id": 40127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:63"
            },
            "scope": 40129,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40120,
              "name": "IERC165",
              "nameLocations": [
                "424:7:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49182,
              "src": "424:7:63"
            },
            "id": 40121,
            "nodeType": "InheritanceSpecifier",
            "src": "424:7:63"
          }
        ],
        "canonicalName": "IJBSplitAllocator",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 40119,
          "nodeType": "StructuredDocumentation",
          "src": "215:178:63",
          "text": "@title Split allocator\n @notice Provide a way to process a single split with extra logic\n @dev The contract address should be set as an allocator in the adequate split"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          40129,
          49182
        ],
        "name": "IJBSplitAllocator",
        "nameLocation": "403:17:63",
        "scope": 40130,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 63
}